// Code generated by go-swagger; DO NOT EDIT.

package pool

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"tam.io/homework/models"
)

// InsertPoolOKCode is the HTTP code returned for type InsertPoolOK
const InsertPoolOKCode int = 200

/*InsertPoolOK OK

swagger:response insertPoolOK
*/
type InsertPoolOK struct {

	/*
	  In: Body
	*/
	Payload *models.PoolObjectAddResponse `json:"body,omitempty"`
}

// NewInsertPoolOK creates InsertPoolOK with default headers values
func NewInsertPoolOK() *InsertPoolOK {

	return &InsertPoolOK{}
}

// WithPayload adds the payload to the insert pool o k response
func (o *InsertPoolOK) WithPayload(payload *models.PoolObjectAddResponse) *InsertPoolOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the insert pool o k response
func (o *InsertPoolOK) SetPayload(payload *models.PoolObjectAddResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InsertPoolOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// InsertPoolBadRequestCode is the HTTP code returned for type InsertPoolBadRequest
const InsertPoolBadRequestCode int = 400

/*InsertPoolBadRequest Bad Client Request

swagger:response insertPoolBadRequest
*/
type InsertPoolBadRequest struct {

	/*
	  In: Body
	*/
	Payload models.ErrorResponse `json:"body,omitempty"`
}

// NewInsertPoolBadRequest creates InsertPoolBadRequest with default headers values
func NewInsertPoolBadRequest() *InsertPoolBadRequest {

	return &InsertPoolBadRequest{}
}

// WithPayload adds the payload to the insert pool bad request response
func (o *InsertPoolBadRequest) WithPayload(payload models.ErrorResponse) *InsertPoolBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the insert pool bad request response
func (o *InsertPoolBadRequest) SetPayload(payload models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InsertPoolBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*InsertPoolDefault generic error response

swagger:response insertPoolDefault
*/
type InsertPoolDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload models.ErrorResponse `json:"body,omitempty"`
}

// NewInsertPoolDefault creates InsertPoolDefault with default headers values
func NewInsertPoolDefault(code int) *InsertPoolDefault {
	if code <= 0 {
		code = 500
	}

	return &InsertPoolDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the insert pool default response
func (o *InsertPoolDefault) WithStatusCode(code int) *InsertPoolDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the insert pool default response
func (o *InsertPoolDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the insert pool default response
func (o *InsertPoolDefault) WithPayload(payload models.ErrorResponse) *InsertPoolDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the insert pool default response
func (o *InsertPoolDefault) SetPayload(payload models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InsertPoolDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
