// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PoolObject pool object
//
// swagger:model poolObject
type PoolObject struct {

	// pool Id
	// Required: true
	PoolID *int64 `json:"poolId"`

	// pool values
	// Required: true
	// Max Items: 1000000
	PoolValues []int32 `json:"poolValues"`
}

// Validate validates this pool object
func (m *PoolObject) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePoolID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePoolValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PoolObject) validatePoolID(formats strfmt.Registry) error {

	if err := validate.Required("poolId", "body", m.PoolID); err != nil {
		return err
	}

	return nil
}

func (m *PoolObject) validatePoolValues(formats strfmt.Registry) error {

	if err := validate.Required("poolValues", "body", m.PoolValues); err != nil {
		return err
	}

	iPoolValuesSize := int64(len(m.PoolValues))

	if err := validate.MaxItems("poolValues", "body", iPoolValuesSize, 1000000); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this pool object based on context it is used
func (m *PoolObject) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PoolObject) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PoolObject) UnmarshalBinary(b []byte) error {
	var res PoolObject
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
